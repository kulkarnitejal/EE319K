


ARM Macro Assembler    Page 1 


    1 00000000         ;****************** main.s ***************
    2 00000000         ; Program written by: **-UUU-*Your Names**update this***
                       
    3 00000000         ; Date Created: 2/14/2017
    4 00000000         ; Last Modified: 1/18/2019
    5 00000000         ; You are given a simple stepper motor software system w
                       ith one input and
    6 00000000         ; four outputs. This program runs, but you are asked to 
                       add minimally intrusive
    7 00000000         ; debugging instruments to verify it is running properly
                       . 
    8 00000000         ;   If the input PA4 is low, the stepper motor outputs c
                       ycle 10,6,5,9,...
    9 00000000         ;   If the input PA4 is high, the stepper motor outputs 
                       cycle 5,6,10,9,...
   10 00000000         ;   Insert debugging instruments which gather data (stat
                       e and timing)
   11 00000000         ;   to verify that the system is functioning as expected
                       .
   12 00000000         ; Hardware connections (External: One button and four ou
                       tputs to stepper motor)
   13 00000000         ;  PA4 is Button input  (1 means pressed, 0 means not pr
                       essed)
   14 00000000         ;  PE3-0 are stepper motor outputs 
   15 00000000         ;  PF2 is Blue LED on Launchpad used as a heartbeat
   16 00000000         ; Instrumentation data to be gathered is as follows:
   17 00000000         ; After every output to Port E, collect one state and ti
                       me entry. 
   18 00000000         ; The state information is the 5 bits on Port A bit 4 an
                       d Port E PE3-0
   19 00000000         ;   place one 8-bit entry in your Data Buffer  
   20 00000000         ; The time information is the 24-bit time difference bet
                       ween this output and the previous (in 12.5ns units)
   21 00000000         ;   place one 32-bit entry in the Time Buffer
   22 00000000         ;    24-bit value of the SysTick's Current register (NVI
                       C_ST_CURRENT_R)
   23 00000000         ;    you must handle the roll over as Current goes 3,2,1
                       ,0,0x00FFFFFF,0xFFFFFE,
   24 00000000         ; Note: The size of both buffers is 100 entries. Once yo
                       u fill these
   25 00000000         ;       entries you should stop collecting data
   26 00000000         ; The heartbeat is an indicator of the running of the pr
                       ogram. 
   27 00000000         ; On each iteration of the main loop of your program tog
                       gle the 
   28 00000000         ; LED to indicate that your code(system) is live (not st
                       uck or dead).
   29 00000000         
   30 00000000 400FE608 
                       SYSCTL_RCGCGPIO_R
                               EQU              0x400FE608
   31 00000000 E000E018 
                       NVIC_ST_CURRENT_R
                               EQU              0xE000E018
   32 00000000 400043FC 
                       GPIO_PORTA_DATA_R
                               EQU              0x400043FC
   33 00000000 40004400 
                       GPIO_PORTA_DIR_R



ARM Macro Assembler    Page 2 


                               EQU              0x40004400
   34 00000000 4000451C 
                       GPIO_PORTA_DEN_R
                               EQU              0x4000451C
   35 00000000 400243FC 
                       GPIO_PORTE_DATA_R
                               EQU              0x400243FC
   36 00000000 40024400 
                       GPIO_PORTE_DIR_R
                               EQU              0x40024400
   37 00000000 4002451C 
                       GPIO_PORTE_DEN_R
                               EQU              0x4002451C
   38 00000000 400253FC 
                       GPIO_PORTF_DATA_R
                               EQU              0x400253FC
   39 00000000 40025400 
                       GPIO_PORTF_DIR_R
                               EQU              0x40025400
   40 00000000 4002551C 
                       GPIO_PORTF_DEN_R
                               EQU              0x4002551C
   41 00000000         ; RAM Area
   42 00000000                 AREA             DATA, ALIGN=2
   43 00000000 00 00 00 
              00       Index   SPACE            4           ; index into Steppe
                                                            r table 0,1,2,3
   44 00000004 00 00 00 
              00       Direction
                               SPACE            4           ; -1 for CCW, 0 for
                                                             stop 1 for CW
   45 00000008         
   46 00000008         ;place your debug variables in RAM here
   47 00000008 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 3 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       DataBuffer
                               SPACE            100
   48 0000006C 00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 4 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 



ARM Macro Assembler    Page 5 


              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00 00 00 
              00       TimeBuffer
                               SPACE            400
   49 000001FC 00 00 00 
              00       DataPt  SPACE            4
   50 00000200 00 00 00 
              00       TimePt  SPACE            4
   51 00000204 00 00 00 
              00       lastTime
                               SPACE            4
   52 00000208         ; ROM Area
   53 00000208                 IMPORT           TExaS_Init
   54 00000208                 IMPORT           SysTick_Init
   55 00000208         ;-UUU-Import routine(s) from other assembly files (like 
                       SysTick.s) here
   56 00000208                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   57 00000000                 THUMB
   58 00000000 05 06 0A 
              09       Stepper DCB              5,6,10,9
   59 00000004                 EXPORT           Start
   60 00000004         
   61 00000004         Start
   62 00000004         ; TExaS_Init sets bus clock at 80 MHz
   63 00000004         ; PA4, PE3-PE0 out logic analyzer to TExasDisplay
   64 00000004 486D            LDR              R0,=SendDataToLogicAnalyzer
   65 00000006 F040 0001       ORR              R0,R0,#1
   66 0000000A F7FF FFFE       BL               TExaS_Init  ; logic analyzer, 8
                                                            0 MHz
   67 0000000E         ;place your initializations here
   68 0000000E F000 F826       BL               Stepper_Init ; initializesteppe
                                                            r motor
   69 00000012 F000 F83E       BL               Switch_Init ; initialize switch
                                                             input
   70 00000016         ;**********************
   71 00000016 F000 F873       BL               Debug_Init  ;(you write this)



ARM Macro Assembler    Page 6 


   72 0000001A F000 F84C       BL               LED_Init
   73 0000001E         ;**********************
   74 0000001E         
   75 0000001E B662            CPSIE            I           ; TExaS logic analy
                                                            zer runs on interru
                                                            pts
   76 00000020 F04F 0500       MOV              R5,#0       ; last PA4
   77 00000024         
   78 00000024         
   79 00000024         loop
   80 00000024 4966            LDR              R1,=GPIO_PORTF_DATA_R
   81 00000026 6808            LDR              R0,[R1]
   82 00000028 F080 0004       EOR              R0,#0X04
   83 0000002C 6008            STR              R0,[R1]
   84 0000002E 4965            LDR              R1,=GPIO_PORTA_DATA_R
   85 00000030 680C            LDR              R4,[R1]     ;current value of s
                                                            witch
   86 00000032 F004 0410       AND              R4,R4,#0x10 ; select just bit 4
                                                            
   87 00000036 2C00            CMP              R4,#0
   88 00000038 D00A            BEQ              no          ; skip if not pushe
                                                            d
   89 0000003A 2D00            CMP              R5,#0
   90 0000003C D108            BNE              no          ; skip if pushed la
                                                            st time
   91 0000003E         ; this time yes, last time no
   92 0000003E 4962            LDR              R1,=Direction
   93 00000040 6808            LDR              R0,[R1]     ; current direction
                                                            
   94 00000042 F100 0001       ADD              R0,R0,#1    ;-1,0,1 to 0,1,2
   95 00000046 2802            CMP              R0,#2
   96 00000048 D101            BNE              ok
   97 0000004A F04F 30FF       MOV              R0,#-1      ; cycles through va
                                                            lues -1,0,1
   98 0000004E 6008    ok      STR              R0,[R1]     ; Direction=0 (CW) 
                                                             
   99 00000050 4625    no      MOV              R5,R4       ; setup for next ti
                                                            me
  100 00000052 F000 F842       BL               Stepper_Step
  101 00000056 485D            LDR              R0,=1600000
  102 00000058 F000 F84F       BL               Wait        ; time delay fixed 
                                                            but not accurate   
                                                            
  103 0000005C E7E2            B                loop
  104 0000005E         ;Initialize stepper motor interface
  105 0000005E         Stepper_Init
  106 0000005E F04F 0001       MOV              R0,#1
  107 00000062 4959            LDR              R1,=Direction
  108 00000064 6008            STR              R0,[R1]     ; Direction=0 (CW)
  109 00000066 F04F 0000       MOV              R0,#0
  110 0000006A 4959            LDR              R1,=Index
  111 0000006C 6008            STR              R0,[R1]     ; Index=0
  112 0000006E         ; activate clock for Port E
  113 0000006E 4959            LDR              R1, =SYSCTL_RCGCGPIO_R
  114 00000070 6808            LDR              R0, [R1]
  115 00000072 F040 0010       ORR              R0, R0, #0x10 ; Clock for E
  116 00000076 6008            STR              R0, [R1]
  117 00000078 BF00            NOP
  118 0000007A BF00            NOP                          ; allow time to fin



ARM Macro Assembler    Page 7 


                                                            ish activating
  119 0000007C         ; set direction register
  120 0000007C 4956            LDR              R1, =GPIO_PORTE_DIR_R
  121 0000007E 6808            LDR              R0, [R1]
  122 00000080 F040 000F       ORR              R0, R0, #0x0F 
                                                            ; Output on PE0-PE3
                                                            
  123 00000084 6008            STR              R0, [R1]
  124 00000086         ; enable digital port
  125 00000086 4955            LDR              R1, =GPIO_PORTE_DEN_R
  126 00000088 6808            LDR              R0, [R1]
  127 0000008A F040 000F       ORR              R0, R0, #0x0F ; enable PE3-0
  128 0000008E 6008            STR              R0, [R1]
  129 00000090 4770            BX               LR
  130 00000092         ;Initialize switch interface
  131 00000092         Switch_Init
  132 00000092         ; activate clock for Port A
  133 00000092 4950            LDR              R1, =SYSCTL_RCGCGPIO_R
  134 00000094 6808            LDR              R0, [R1]
  135 00000096 F040 0001       ORR              R0, R0, #0x01 ; Clock for A
  136 0000009A 6008            STR              R0, [R1]
  137 0000009C BF00            NOP
  138 0000009E BF00            NOP                          ; allow time to fin
                                                            ish activating
  139 000000A0         ; set direction register
  140 000000A0 494F            LDR              R1, =GPIO_PORTA_DIR_R
  141 000000A2 6808            LDR              R0, [R1]
  142 000000A4 F020 0010       BIC              R0, R0, #0x10 ; Input on PA4
  143 000000A8 6008            STR              R0, [R1]
  144 000000AA         ; 5) enable digital port
  145 000000AA 494E            LDR              R1, =GPIO_PORTA_DEN_R
  146 000000AC 6808            LDR              R0, [R1]
  147 000000AE F040 0010       ORR              R0, R0, #0x10 ; enable PA4
  148 000000B2 6008            STR              R0, [R1]
  149 000000B4 4770            BX               LR
  150 000000B6         LED_Init
  151 000000B6 4947            LDR              R1,=SYSCTL_RCGCGPIO_R ;turning 
                                                            on the clock
  152 000000B8 7808            LDRB             R0,[R1]
  153 000000BA F040 0020       ORR              R0,#0X20
  154 000000BE 7008            STRB             R0,[R1]
  155 000000C0 BF00            NOP                          ;wait for stabiliza
                                                            tion bc 4 clock cyc
                                                            les to completely s
                                                            tabilize
  156 000000C2 BF00            NOP
  157 000000C4 4948            LDR              R1, =GPIO_PORTF_DIR_R
  158 000000C6 7808            LDRB             R0,[R1]
  159 000000C8 F040 0004       ORR              R0,#0X04
  160 000000CC 7008            STRB             R0,[R1]
  161 000000CE 4947            LDR              R1, =GPIO_PORTF_DEN_R ;set digi
                                                            tal enable (we use 
                                                            4 pins)
  162 000000D0 7808            LDRB             R0,[R1]
  163 000000D2 F040 0004       ORR              R0, #0X04
  164 000000D6 7008            STRB             R0,[R1]
  165 000000D8 4770            BX               LR
  166 000000DA         ; Step the motor clockwise
  167 000000DA         ; Direction determines the rotational direction



ARM Macro Assembler    Page 8 


  168 000000DA         ; Input: None
  169 000000DA         ; Output: None
  170 000000DA         Stepper_Step
  171 000000DA B510            PUSH             {R4,LR}
  172 000000DC 493C            LDR              R1,=Index
  173 000000DE 680A            LDR              R2,[R1]     ; old Index
  174 000000E0 4B39            LDR              R3,=Direction
  175 000000E2 6818            LDR              R0,[R3]     ; -1 for CCW, 0 for
                                                             stop 1 for CW
  176 000000E4 4402            ADD              R2,R2,R0
  177 000000E6 F002 0203       AND              R2,R2,#3    ; 0,1,2,3,0,1,2,...
                                                            
  178 000000EA 600A            STR              R2,[R1]     ; new Index
  179 000000EC 4B40            LDR              R3,=Stepper ; table
  180 000000EE 5CD0            LDRB             R0,[R2,R3]  ; next output: 5,6,
                                                            10,9,5,6,10,...
  181 000000F0 4940            LDR              R1,=GPIO_PORTE_DATA_R 
                                                            ; change PE3-PE0
  182 000000F2 6008            STR              R0,[R1]
  183 000000F4 F000 F82A       BL               Debug_Capture
  184 000000F8 BD10            POP              {R4,PC}
  185 000000FA         ; inaccurate and inefficient time delay
  186 000000FA         Wait
  187 000000FA 1E40            SUBS             R0,R0,#1    ; outer loop
  188 000000FC D1FD            BNE              Wait
  189 000000FE 4770            BX               LR
  190 00000100         
  191 00000100         Debug_Init
  192 00000100 B51F            PUSH             {R0-R4,LR}
  193 00000102         ; you write this
  194 00000102 493D            LDR              R1,=DataBuffer
  195 00000104 F04F 0264       MOV              R2,#100
  196 00000108 6808    loop1   LDR              R0,[R1]
  197 0000010A 2A00            CMP              R2,#0
  198 0000010C D007            BEQ              done
  199 0000010E F04F 03FF       MOV              R3,#0XFF
  200 00000112 600B            STR              R3,[R1]
  201 00000114 F101 0101       ADD              R1,R1,#1
  202 00000118 F1A2 0201       SUB              R2,R2,#1
  203 0000011C E7F4            B                loop1
  204 0000011E 4937    done    LDR              R1,=TimeBuffer
  205 00000120 F04F 0264       MOV              R2,#100
  206 00000124 6808    loop2   LDR              R0,[R1]
  207 00000126 2A00            CMP              R2,#0
  208 00000128 D007            BEQ              done2
  209 0000012A F04F 33FF       MOV              R3,#0XFFFFFFFF
  210 0000012E 600B            STR              R3,[R1]
  211 00000130 F101 0104       ADD              R1,R1,#4
  212 00000134 F1A2 0201       SUB              R2,R2,#1
  213 00000138 E7F4            B                loop2
  214 0000013A         
  215 0000013A 4931    done2   LDR              R1,=DataPt
  216 0000013C 4A31            LDR              R2,=TimePt
  217 0000013E 4B2F            LDR              R3,=TimeBuffer
  218 00000140 4C2D            LDR              R4,=DataBuffer
  219 00000142 6013            STR              R3,[R2]
  220 00000144 600C            STR              R4,[R1]
  221 00000146         
  222 00000146 F7FF FFFE       BL               SysTick_Init



ARM Macro Assembler    Page 9 


  223 0000014A BD1F            POP              {R0-R4,PC}
  224 0000014C         
  225 0000014C         ;Debug capture      
  226 0000014C         Debug_Capture
  227 0000014C E92D 5FFF       PUSH             {R0-R12,LR}
  228 00000150         ; you write this
  229 00000150 492B            LDR              R1, =DataPt
  230 00000152 6808            LDR              R0, [R1]
  231 00000154 4A28            LDR              R2, =DataBuffer
  232 00000156 F102 0264       ADD              R2, R2,#100
  233 0000015A 4282            CMP              R2, R0
  234 0000015C D101            BNE              continue
  235 0000015E E8BD 9FFF       POP              {R0-R12,PC}
  236 00000162         continue
  237 00000162         
  238 00000162         ; Mask PA5, PE3-PE0   
  239 00000162 4924            LDR              R1, =GPIO_PORTE_DATA_R
  240 00000164 680A            LDR              R2, [R1]    ;  PortE Data = 0x6
                                                            , (R2 = 6)   
  241 00000166 4917            LDR              R1, =GPIO_PORTA_DATA_R
  242 00000168 680B            LDR              R3, [R1]    ;  PortA Data = 0x1
                                                            0  
  243 0000016A EB03 0402       ADD              R4, R3, R2  ; 0x10 + 0x06  = 0x
                                                            16   
  244 0000016E 4D24            LDR              R5, =DataPt
  245 00000170 682E            LDR              R6, [R5]    ; R6 contains curre
                                                            nt address of dataB
                                                            uf   
  246 00000172 7034            STRB             R4, [R6]
  247 00000174 F106 0601       ADD              R6, R6, #1
  248 00000178 602E            STR              R6, [R5]    ; Time Buffer   
  249 0000017A 4923            LDR              R1, =NVIC_ST_CURRENT_R
  250 0000017C 680A            LDR              R2, [R1]    ; R2 contains the c
                                                            urrent count value;
                                                             Calculate the 24-b
                                                            it elapsed time    
                                                             
  251 0000017E 4C23            LDR              R4, =lastTime
  252 00000180 6825            LDR              R5, [R4]
  253 00000182 EBA5 0502       SUB              R5, R5, R2  ; Previous - Curren
                                                            t 
  254 00000186 F025 457F       AND              R5, #0x00FFFFFF
  255 0000018A F8DF 8078       LDR              R8, =TimePt
  256 0000018E F8D8 9000       LDR              R9, [R8]
  257 00000192 F8C9 5000       STR              R5, [R9]    ; Store elapsed tim
                                                            e into timeBuf
  258 00000196 6022            STR              R2, [R4]    ;store current time
                                                             into lastTime
  259 00000198 F109 0904       ADD              R9, R9, #4  ; 32 bit element ar
                                                            ray    
  260 0000019C F8C8 9000       STR              R9, [R8]
  261 000001A0         
  262 000001A0         ;62 cycles* 12.5ns = 775ns 
  263 000001A0         ;Percentage Overhead = ((775*10^-9)/.08)100 = 0.00097%
  264 000001A0         
  265 000001A0         ;Minimum elapsed time: 61cycles*12.5ns = 762.5ns
  266 000001A0         ;Maximum elapsed time: 63cycles*12.5ns = 787.5ns
  267 000001A0 E8BD 9FFF       POP              {R0-R12,PC}
  268 000001A4         ; edit the following only if you need to move pins from 



ARM Macro Assembler    Page 10 


                       PA4, PE3-0      
  269 000001A4         ; logic analyzer on the real board
  270 000001A4 40004040 
                       PA4     equ              0x40004040
  271 000001A4 4002403C 
                       PE30    equ              0x4002403C
  272 000001A4 4000C000 
                       UART0_DR_R
                               equ              0x4000C000
  273 000001A4         SendDataToLogicAnalyzer
  274 000001A4 491A            LDR              R1,=PA4
  275 000001A6 6809            LDR              R1,[R1]     ; read PA4
  276 000001A8 481A            LDR              R0,=PE30    ; read PE3-PE0
  277 000001AA 6800            LDR              R0,[R0]
  278 000001AC EA40 0001       ORR              R0,R0,R1    ;combine into one 5
                                                            -bit value
  279 000001B0 F040 0080       ORR              R0,R0,#0x80
  280 000001B4 4918            LDR              R1,=UART0_DR_R
  281 000001B6 6008            STR              R0,[R1]     ; send data at 10 k
                                                            Hz
  282 000001B8 4770            BX               LR
  283 000001BA         
  284 000001BA         
  285 000001BA 00 00           ALIGN                        ; make sure the end
                                                             of this section is
                                                             aligned
  286 000001BC                 END                          ; end of file
              00000000 
              400253FC 
              400043FC 
              00000000 
              00186A00 
              00000000 
              400FE608 
              40024400 
              4002451C 
              40004400 
              4000451C 
              40025400 
              4002551C 
              00000000 
              400243FC 
              00000000 
              00000000 
              00000000 
              00000000 
              E000E018 
              00000000 
              40004040 
              4002403C 
              4000C000 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M4 --apcs=interw
ork --depend=.\main.d -o.\main.o -I.\RTE\_Lab4 -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\
5.4.0\CMSIS\Core\Include -IC:\Keil_v5\ARM\PACK\Keil\TM4C_DFP\1.1.0\Device\Inclu
de\TM4C123 --predefine="__EVAL SETA 1" --predefine="__UVISION_VERSION SETA 526"
 --predefine="_RTE_ SETA 1" --predefine="TM4C123GH6PM SETA 1" --list=.\main.lst
 main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DATA 00000000

Symbol: DATA
   Definitions
      At line 42 in file main.s
   Uses
      None
Comment: DATA unused
DataBuffer 00000008

Symbol: DataBuffer
   Definitions
      At line 47 in file main.s
   Uses
      At line 194 in file main.s
      At line 218 in file main.s
      At line 231 in file main.s

DataPt 000001FC

Symbol: DataPt
   Definitions
      At line 49 in file main.s
   Uses
      At line 215 in file main.s
      At line 229 in file main.s
      At line 244 in file main.s

Direction 00000004

Symbol: Direction
   Definitions
      At line 44 in file main.s
   Uses
      At line 92 in file main.s
      At line 107 in file main.s
      At line 174 in file main.s

Index 00000000

Symbol: Index
   Definitions
      At line 43 in file main.s
   Uses
      At line 110 in file main.s
      At line 172 in file main.s

TimeBuffer 0000006C

Symbol: TimeBuffer
   Definitions
      At line 48 in file main.s
   Uses
      At line 204 in file main.s
      At line 217 in file main.s

TimePt 00000200

Symbol: TimePt



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 50 in file main.s
   Uses
      At line 216 in file main.s
      At line 255 in file main.s

lastTime 00000204

Symbol: lastTime
   Definitions
      At line 51 in file main.s
   Uses
      At line 251 in file main.s
Comment: lastTime used once
8 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 56 in file main.s
   Uses
      None
Comment: .text unused
Debug_Capture 0000014C

Symbol: Debug_Capture
   Definitions
      At line 226 in file main.s
   Uses
      At line 183 in file main.s
Comment: Debug_Capture used once
Debug_Init 00000100

Symbol: Debug_Init
   Definitions
      At line 191 in file main.s
   Uses
      At line 71 in file main.s
Comment: Debug_Init used once
LED_Init 000000B6

Symbol: LED_Init
   Definitions
      At line 150 in file main.s
   Uses
      At line 72 in file main.s
Comment: LED_Init used once
SendDataToLogicAnalyzer 000001A4

Symbol: SendDataToLogicAnalyzer
   Definitions
      At line 273 in file main.s
   Uses
      At line 64 in file main.s
Comment: SendDataToLogicAnalyzer used once
Start 00000004

Symbol: Start
   Definitions
      At line 61 in file main.s
   Uses
      At line 59 in file main.s
Comment: Start used once
Stepper 00000000

Symbol: Stepper
   Definitions
      At line 58 in file main.s
   Uses
      At line 179 in file main.s
Comment: Stepper used once
Stepper_Init 0000005E

Symbol: Stepper_Init



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 105 in file main.s
   Uses
      At line 68 in file main.s
Comment: Stepper_Init used once
Stepper_Step 000000DA

Symbol: Stepper_Step
   Definitions
      At line 170 in file main.s
   Uses
      At line 100 in file main.s
Comment: Stepper_Step used once
Switch_Init 00000092

Symbol: Switch_Init
   Definitions
      At line 131 in file main.s
   Uses
      At line 69 in file main.s
Comment: Switch_Init used once
Wait 000000FA

Symbol: Wait
   Definitions
      At line 186 in file main.s
   Uses
      At line 102 in file main.s
      At line 188 in file main.s

continue 00000162

Symbol: continue
   Definitions
      At line 236 in file main.s
   Uses
      At line 234 in file main.s
Comment: continue used once
done 0000011E

Symbol: done
   Definitions
      At line 204 in file main.s
   Uses
      At line 198 in file main.s
Comment: done used once
done2 0000013A

Symbol: done2
   Definitions
      At line 215 in file main.s
   Uses
      At line 208 in file main.s
Comment: done2 used once
loop 00000024

Symbol: loop
   Definitions
      At line 79 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 103 in file main.s
Comment: loop used once
loop1 00000108

Symbol: loop1
   Definitions
      At line 196 in file main.s
   Uses
      At line 203 in file main.s
Comment: loop1 used once
loop2 00000124

Symbol: loop2
   Definitions
      At line 206 in file main.s
   Uses
      At line 213 in file main.s
Comment: loop2 used once
no 00000050

Symbol: no
   Definitions
      At line 99 in file main.s
   Uses
      At line 88 in file main.s
      At line 90 in file main.s

ok 0000004E

Symbol: ok
   Definitions
      At line 98 in file main.s
   Uses
      At line 96 in file main.s
Comment: ok used once
19 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

GPIO_PORTA_DATA_R 400043FC

Symbol: GPIO_PORTA_DATA_R
   Definitions
      At line 32 in file main.s
   Uses
      At line 84 in file main.s
      At line 241 in file main.s

GPIO_PORTA_DEN_R 4000451C

Symbol: GPIO_PORTA_DEN_R
   Definitions
      At line 34 in file main.s
   Uses
      At line 145 in file main.s
Comment: GPIO_PORTA_DEN_R used once
GPIO_PORTA_DIR_R 40004400

Symbol: GPIO_PORTA_DIR_R
   Definitions
      At line 33 in file main.s
   Uses
      At line 140 in file main.s
Comment: GPIO_PORTA_DIR_R used once
GPIO_PORTE_DATA_R 400243FC

Symbol: GPIO_PORTE_DATA_R
   Definitions
      At line 35 in file main.s
   Uses
      At line 181 in file main.s
      At line 239 in file main.s

GPIO_PORTE_DEN_R 4002451C

Symbol: GPIO_PORTE_DEN_R
   Definitions
      At line 37 in file main.s
   Uses
      At line 125 in file main.s
Comment: GPIO_PORTE_DEN_R used once
GPIO_PORTE_DIR_R 40024400

Symbol: GPIO_PORTE_DIR_R
   Definitions
      At line 36 in file main.s
   Uses
      At line 120 in file main.s
Comment: GPIO_PORTE_DIR_R used once
GPIO_PORTF_DATA_R 400253FC

Symbol: GPIO_PORTF_DATA_R
   Definitions
      At line 38 in file main.s
   Uses
      At line 80 in file main.s
Comment: GPIO_PORTF_DATA_R used once
GPIO_PORTF_DEN_R 4002551C



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols


Symbol: GPIO_PORTF_DEN_R
   Definitions
      At line 40 in file main.s
   Uses
      At line 161 in file main.s
Comment: GPIO_PORTF_DEN_R used once
GPIO_PORTF_DIR_R 40025400

Symbol: GPIO_PORTF_DIR_R
   Definitions
      At line 39 in file main.s
   Uses
      At line 157 in file main.s
Comment: GPIO_PORTF_DIR_R used once
NVIC_ST_CURRENT_R E000E018

Symbol: NVIC_ST_CURRENT_R
   Definitions
      At line 31 in file main.s
   Uses
      At line 249 in file main.s
Comment: NVIC_ST_CURRENT_R used once
PA4 40004040

Symbol: PA4
   Definitions
      At line 270 in file main.s
   Uses
      At line 274 in file main.s
Comment: PA4 used once
PE30 4002403C

Symbol: PE30
   Definitions
      At line 271 in file main.s
   Uses
      At line 276 in file main.s
Comment: PE30 used once
SYSCTL_RCGCGPIO_R 400FE608

Symbol: SYSCTL_RCGCGPIO_R
   Definitions
      At line 30 in file main.s
   Uses
      At line 113 in file main.s
      At line 133 in file main.s
      At line 151 in file main.s

UART0_DR_R 4000C000

Symbol: UART0_DR_R
   Definitions
      At line 272 in file main.s
   Uses
      At line 280 in file main.s
Comment: UART0_DR_R used once
14 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

SysTick_Init 00000000

Symbol: SysTick_Init
   Definitions
      At line 54 in file main.s
   Uses
      At line 222 in file main.s
Comment: SysTick_Init used once
TExaS_Init 00000000

Symbol: TExaS_Init
   Definitions
      At line 53 in file main.s
   Uses
      At line 66 in file main.s
Comment: TExaS_Init used once
2 symbols
379 symbols in table
